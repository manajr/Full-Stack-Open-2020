{"ast":null,"code":"var _jsxFileName = \"/home/manajunior/Projetos/Full-Stack-Open-2020/part1/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, props.course_name, \" Course\"));\n};\n\nconst Part = props => {\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 1\n    }\n  }, props.part_name, \" \", props.part_exe_num, \" exercises\");\n};\n\nconst Content = props => {\n  /*var rows = [];\n  for (var i = 0; i < (props.part_name).length; i++){\n    const item = props.part_name[i]\n    rows.push(\n   <>\n     <p>Course part - {props.part_name[i]} - has {props.part_exe_num[i]} exercises</p>\n   </>\n   )\n  }\n  return(rows)*/\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Part, {\n    part_name: props.part_name[0].name,\n    part_exe_num: props.part_name[0].exercises,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Part, {\n    part_name: props.part_name[1].name,\n    part_exe_num: props.part_name[1].exercises,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Part, {\n    part_name: props.part_name[2].name,\n    part_exe_num: props.part_name[2].exercises,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }));\n};\n\nconst Total = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Number of exercises: \", props.exercises_num));\n};\n\nconst App = () => {\n  const course = 'Half Stack application development';\n  const part1 = {\n    name: 'Fundamentals of React',\n    exercises: 10\n  };\n  const part2 = {\n    name: 'Using props to pass data',\n    exercises: 7\n  };\n  const part3 = {\n    name: 'State of a component',\n    exercises: 14\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    course_name: course,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    part_name: [part1, part2, part3],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Total, {\n    exercises_num: part1.exercises + part2.exercises + part3.exercises3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }));\n  /*return (\n    <div>\n      <h1>{course}</h1>\n      <p>\n        {part1} {exercises1}\n      </p>\n      <p>\n        {part2} {exercises2}\n      </p>\n      <p>\n        {part3} {exercises3}\n      </p>\n      <p>Number of exercises {exercises1 + exercises2 + exercises3}</p>\n    </div>\n  )*/\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/manajunior/Projetos/Full-Stack-Open-2020/part1/src/index.js"],"names":["React","ReactDOM","Header","props","course_name","Part","part_name","part_exe_num","Content","name","exercises","Total","exercises_num","App","course","part1","part2","part3","exercises3","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAU;AACvB,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,WAAX,YADF,CADF;AAKD,CAND;;AAOA,MAAMC,IAAI,GAAIF,KAAD,IAAW;AACtB,sBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAK,CAACG,SAAV,OAAsBH,KAAK,CAACI,YAA5B,eADE;AAGD,CAJD;;AAMC,MAAMC,OAAO,GAAIL,KAAD,IAAU;AACxB;;;;;;;;;;AAUA,sBAAO,uDACP,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEA,KAAK,CAACG,SAAN,CAAgB,CAAhB,EAAmBG,IAApC;AAA0C,IAAA,YAAY,EAAEN,KAAK,CAACG,SAAN,CAAgB,CAAhB,EAAmBI,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,eAEP,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEP,KAAK,CAACG,SAAN,CAAgB,CAAhB,EAAmBG,IAApC;AAA0C,IAAA,YAAY,EAAEN,KAAK,CAACG,SAAN,CAAgB,CAAhB,EAAmBI,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFO,eAGP,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEP,KAAK,CAACG,SAAN,CAAgB,CAAhB,EAAmBG,IAApC;AAA0C,IAAA,YAAY,EAAEN,KAAK,CAACG,SAAN,CAAgB,CAAhB,EAAmBI,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHO,CAAP;AAMA,CAjBF;;AAmBC,MAAMC,KAAK,GAAIR,KAAD,IAAU;AACtB,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAyBA,KAAK,CAACS,aAA/B,CADF,CADA;AAKD,CAND;;AAOF,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,MAAM,GAAG,oCAAf;AACA,QAAMC,KAAK,GAAG;AACZN,IAAAA,IAAI,EAAE,uBADM;AAEZC,IAAAA,SAAS,EAAE;AAFC,GAAd;AAIA,QAAMM,KAAK,GAAG;AACZP,IAAAA,IAAI,EAAE,0BADM;AAEZC,IAAAA,SAAS,EAAE;AAFC,GAAd;AAIA,QAAMO,KAAK,GAAG;AACZR,IAAAA,IAAI,EAAE,sBADM;AAEZC,IAAAA,SAAS,EAAE;AAFC,GAAd;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEI,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAGA,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAEF,KAAK,CAACL,SAAN,GAAkBM,KAAK,CAACN,SAAxB,GAAoCO,KAAK,CAACC,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CADF;AAOA;;;;;;;;;;;;;;;AAeD,CArCD;;AAuCAjB,QAAQ,CAACkB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Header = (props) =>{\n  return(\n    <>\n      <h1>{props.course_name} Course</h1>\n    </>\n  )\n}\nconst Part = (props) => {\n  return(\n<p>{props.part_name} {props.part_exe_num} exercises</p>\n  )\n}\n\n const Content = (props) =>{\n   /*var rows = [];\n   for (var i = 0; i < (props.part_name).length; i++){\n     const item = props.part_name[i]\n     rows.push(\n    <>\n      <p>Course part - {props.part_name[i]} - has {props.part_exe_num[i]} exercises</p>\n    </>\n    )\n   }\n   return(rows)*/\n   return(<>\n   <Part part_name={props.part_name[0].name} part_exe_num={props.part_name[0].exercises}/>\n   <Part part_name={props.part_name[1].name} part_exe_num={props.part_name[1].exercises}/>\n   <Part part_name={props.part_name[2].name} part_exe_num={props.part_name[2].exercises}/>\n   </>\n   )\n  }\n\n  const Total = (props) =>{\n    return(\n    <div>\n      <p>Number of exercises: {props.exercises_num}</p>\n    </div>\n    )\n  }\nconst App = () => {\n  const course = 'Half Stack application development'\n  const part1 = {\n    name: 'Fundamentals of React',\n    exercises: 10\n  }\n  const part2 = {\n    name: 'Using props to pass data',\n    exercises: 7\n  }\n  const part3 = {\n    name: 'State of a component',\n    exercises: 14\n  }\n  \n  return(\n    <div>\n    <Header course_name={course}/>\n    <Content part_name={[part1, part2, part3]} />\n    <Total exercises_num={part1.exercises + part2.exercises + part3.exercises3} />\n    </div>\n  )\n  /*return (\n    <div>\n      <h1>{course}</h1>\n      <p>\n        {part1} {exercises1}\n      </p>\n      <p>\n        {part2} {exercises2}\n      </p>\n      <p>\n        {part3} {exercises3}\n      </p>\n      <p>Number of exercises {exercises1 + exercises2 + exercises3}</p>\n    </div>\n  )*/\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}